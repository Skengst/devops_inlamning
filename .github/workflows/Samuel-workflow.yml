# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Samuel Workflow

on:
  workflow_dispatch:
    inputs:
      ErrorLog:
        description: "Should a Error log be generated?"
        required: true
        default: 'false'
        type: boolean

permissions:
  contents: read

jobs:
  pytest:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Create Errorlog
      if: github.event.inputs.ErrorLog == 'true'
      run: |
        echo "Error log generated because of user request." > error.log
        
    - name: Test with pytest
      run: |
        pytest || "Pytest Failed" >> error.log

    - name: Generate pytest error details.
      if: failure() || github.event.inputs.ErrorLog == 'true'
      run: | 
        pytest >> error.log || true
    
    - name: Upload error log artifact
      uses: actions/upload-artifact@v3
      with:
        name: error-log
        path: error.log


  docker:
    runs-on: ubuntu-latest
    needs: pytest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_SAMUEL_USERNAME }}
          password: ${{ secrets.DOCKER_SAMUEL_PASSWORD }}

      - name: Build Docker image
        run: docker build -t devops . || echo "Docker build failed" >> error.log

      - name: Tag Docker image with latest
        run: docker tag devops ${{ secrets.DOCKER_SAMUEL_USERNAME }}/devops:latest || echo "Docker tag latest failed" >> error.log

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_SAMUEL_USERNAME }}/devops:latest || echo "Docker push failed" >> error.log
      
      - name: Upload error log artifact
        uses: actions/upload-artifact@v3
        with:
          name: error-log
          path: error.log



  upload-Error-Log:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Download error log artifact
        uses: actions/download-artifact@v3
        with:
          name: error-log
          
      - name: Upload error log
        if: github.event.inputs.ErrorLog == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: error-log
          path: error.log
